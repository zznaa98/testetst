from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = '7504932589:AAGVSPre_CUKV7mRqVWKLiT9xMk8hfx-RdM'

cities = {
    "თბილისი": ["საბურთალო", "გლდანი", "ვარკეთილი"]
}

product_info = {
    "საბურთალო": "WHITE WIDOW 1GR - 90gel",
    "გლდანი": "WHITE WIDOW 1GR - 90gel",
    "ვარკეთილი": "WHITE WIDOW 1GR - 90gel"
}

payment_text = "თქვენ გადახდას ახორციელებთ LTC-ლაითკოინში, გაითვალისწინეთ აპარატის საკომისიო."

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton(city, callback_data=city)] for city in cities]
    await update.message.reply_text("აირჩიე ქალაქი:", reply_markup=InlineKeyboardMarkup(keyboard))

async def handle_city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    city = query.data
    districts = cities.get(city, [])
    keyboard = [[InlineKeyboardButton(district, callback_data=f"district_{district}")] for district in districts]
    await query.edit_message_text("აირჩიე უბანი:", reply_markup=InlineKeyboardMarkup(keyboard))

async def handle_district(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    district = query.data.replace("district_", "")
    product = product_info.get(district, "პროდუქტი ვერ მოიძებნა")
    keyboard = [[InlineKeyboardButton(product, callback_data=f"product_{district}")]]
    await query.edit_message_text(product, reply_markup=InlineKeyboardMarkup(keyboard))

async def handle_product(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [[InlineKeyboardButton("გადახდა", callback_data="pay")]]
    await query.edit_message_text(payment_text, reply_markup=InlineKeyboardMarkup(keyboard))

async def handle_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.edit_message_text("გადახდის QR კოდი და ინსტრუქცია:")
    await context.bot.send_photo(chat_id=query.message.chat_id, photo=open("qrcode.jpg", "rb"))
    await context.bot.send_message(chat_id=query.message.chat_id, text="გადახდის მისამართი: LTC_მისამართი_აქ")

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(handle_city, pattern="^(თბილისი)$"))
app.add_handler(CallbackQueryHandler(handle_district, pattern="^district_"))
app.add_handler(CallbackQueryHandler(handle_product, pattern="^product_"))
app.add_handler(CallbackQueryHandler(handle_payment, pattern="^pay$"))
app.run_polling()
